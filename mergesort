#include<stdio.h>
#include<time.h>

void merge(int a[],int low,int mid ,int high)
 {
    int i,j,k,b[20];
     i=low;
      j=mid+1;
      k=low;

while(i<=mid&& j<=high)
{
  if(a[i]<=a[j])
    b[k++]=a[i++];
  else
     b[k++]=a[j++];

}  

while(i<=mid)
b[k++]=a[i++];

while(j<=high)
b[k++]=a[j++];

for(k=low;k<=high;k++)
a[k]=b[k];

  }
void mergesort(int a[],int low,int high)
{
int mid;
if(low >=high)
  return;

mid=(low+high)/2;

mergesort(a,low,mid);
mergesort(a,mid+1,high);
merge(a,low,mid,high);


}




int main()
{
	int n,a[100],k;
	clock_t st,et;
	double time_taken;
	
	printf("Enter number of elements:\n");
	scanf("%d",&n);
	
	printf("Enter elements of an array :\n");
	  for(k=1;k<=n;k++)
	    {
	      scanf("%d",&a[k]);
	    
	    }
	    st = clock();
	    quicksort(a,1,n);	    
	    et=clock();
	    
	    printf("Sorted numbers\n");
	      for(k=1;k<=n;k++)
	      
	      printf("%d\t",a[k]);
	       
	       
          time_taken=((double)et-st)/CLOCKS_PER_SEC;
		  printf("time taken for sorting %d elements is %f sec\n",n,time_taken);
		
}
